from django.db import models

# Create your models here.

import numpy as np
import itertools

g_girls = [
    u'アグネスタキオン',
    u'ウイニングチケット',
    u'ウォッカ',
    u'エアグルーブ',
    u'エルコンドルパサー',
    u'オグリキャップ',
    u'キングヘイロー',
    u'グラスワンダー',
    u'ゴールドシップ',
    u'サイレンススズカ',
    u'サクラバクシンオー',
    u'シンボリルドルフ',
    u'スーパークリーク',
    u'スペシャルウィーク',
    u'タイキシャトル',
    u'ダイワスカーレット',
    u'トウカイテイオー',
    u'ナイスネイチャ',
    u'ハルウララ',
    u'マチカネフクキタル',
    u'マヤノトップガン',
    u'マルゼンスキー',
    u'メジロマックイーン',
    u'メジロライアン',
    u'ライスシャワー',
]

g_scores = np.array([
    [1,1,1,1,0,1,0,1,1,0,0,0,1,1,0,1,1,1,0,1,1,0,1,1,1],
    [1,1,1,1,0,1,0,1,1,1,0,0,1,1,0,0,1,1,0,1,1,0,1,1,0],
    [1,1,1,1,1,1,0,1,0,0,0,0,1,1,1,1,1,1,0,1,0,0,1,1,0],
    [1,1,1,1,1,0,0,0,1,1,0,1,1,1,0,1,1,0,0,1,0,0,1,0,1],
    [0,0,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,1],
    [1,1,1,0,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0],
    [0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,0,1,1,0,1,0,1,0,0,0,1,1,1,0,1,0,1,0,0,0,1,1],
    [1,1,0,1,0,0,0,0,1,1,0,1,1,1,0,1,1,1,0,1,1,0,1,1,1],
    [0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0],
    [0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,1],
    [1,1,1,1,1,0,0,0,1,0,0,1,1,1,0,1,1,1,0,1,1,0,1,0,1],
    [1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1],
    [1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,0,0,1,0,0,1,0,1],
    [1,1,1,1,1,0,0,0,1,1,0,1,1,1,0,1,1,1,0,1,0,0,1,0,1],
    [1,1,1,0,0,0,0,1,1,1,0,1,1,1,0,0,1,1,0,1,0,0,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0],
    [1,1,1,1,0,0,0,1,1,1,0,0,1,1,0,1,1,1,0,1,1,0,1,1,1],
    [1,1,0,1,0,0,0,0,1,1,0,1,1,1,0,0,1,1,0,1,1,0,1,0,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0],
    [1,1,1,1,1,1,0,0,1,1,0,1,1,1,0,1,1,1,0,1,1,0,1,1,1],
    [1,1,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0],
    [1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,0,1,1,0,1,0,1],
])

def score_mtx(idx):
    return [[g_scores[y][x] for y in idx] for x in idx]

def avg_score(idx):
    return np.array(score_mtx(idx)).sum() / len(idx) / len(idx)

def to_girl_indices(names):
    return [to_girl_indices(i) if isinstance(i, list) else g_girls.index(i) for i in names]

def to_girl_names(idx):
    return [to_girl_names(i) if isinstance(i, list) else g_girls[i] for i in idx]

def contains_list(a, b):
    return len(not_in_list(a, b)) == 0

def all_combinations(size):
    return itertools.combinations(range(len(g_scores)), size)

def not_in_list(a, b):
    return [i for i in a if i not in b]

def combinations(girls = [], size = 4, score = 1.0):
    return [
        list(c) for c in all_combinations(size)
        if contains_list(girls, c) and avg_score(c) >= score
    ]
